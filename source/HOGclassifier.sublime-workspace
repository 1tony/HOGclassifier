{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"seq",
				"sequenceGenerator"
			],
			[
				"get",
				"getImagePos"
			],
			[
				"image",
				"imageLeftName"
			],
			[
				"Utils",
				"Utils::parseImageName"
			],
			[
				"_image",
				"_imagePosY"
			],
			[
				"fol",
				"foLaser"
			],
			[
				"angle",
				"angleOfCamera"
			],
			[
				"Res",
				"ResultWriter"
			],
			[
				"date",
				"dateOfData"
			],
			[
				"arg",
				"argv"
			],
			[
				"Fa",
				"FAIL"
			],
			[
				"E",
				"ENDC"
			],
			[
				"time",
				"timeOfData"
			],
			[
				"spli",
				"split"
			],
			[
				"pa",
				"pathToDataFolder"
			],
			[
				"path",
				"pathToDataFolder"
			],
			[
				"y",
				"y"
			],
			[
				"xLis",
				"xListInterp"
			],
			[
				"laseLi",
				"laserListAngle"
			],
			[
				"laser",
				"laserListBeamNum"
			],
			[
				"laserL",
				"laserListAngle"
			],
			[
				"parse",
				"parseLasers"
			],
			[
				"curr",
				"currDiff"
			],
			[
				"carme",
				"carmenLines"
			],
			[
				"cou",
				"counterImages"
			],
			[
				"counter",
				"counterImages"
			],
			[
				"coun",
				"counterLaser"
			],
			[
				"lase",
				"laserListBeamNum"
			],
			[
				"Ut",
				"Utils::parseImageName"
			],
			[
				"media",
				"medianY"
			],
			[
				"the",
				"theta"
			],
			[
				"fov",
				"fovStart"
			],
			[
				"utils",
				"utils"
			],
			[
				"vec",
				"vector	std::vector"
			],
			[
				"rec",
				"rect"
			],
			[
				"x",
				"xVec"
			],
			[
				"tempG",
				"tempGpsX"
			],
			[
				"pu",
				"push_back"
			],
			[
				"tem",
				"tempImageName"
			],
			[
				"co",
				"cout"
			],
			[
				"an",
				"angle"
			],
			[
				"sp",
				"split"
			],
			[
				"c",
				"curr"
			],
			[
				"retur",
				"return"
			],
			[
				"las",
				"laserLogFileName"
			],
			[
				"gps",
				"gps_point"
			],
			[
				"end",
				"end_pos"
			],
			[
				"IMAGE",
				"IMAGE_NAME"
			],
			[
				"file",
				"fileName"
			],
			[
				"fil",
				"fileName"
			],
			[
				"ve",
				"vector"
			],
			[
				"out",
				"outFileName"
			],
			[
				"temp",
				"tempLaserListX"
			],
			[
				"start",
				"startAngle"
			],
			[
				"split",
				"splitLine"
			],
			[
				"num",
				"numBeams"
			],
			[
				"cl",
				"close"
			],
			[
				"f",
				"fo"
			],
			[
				"thet",
				"thetaList"
			],
			[
				"siz",
				"size	size"
			],
			[
				"all",
				"allImageNames"
			],
			[
				"fou",
				"foundRectsWithNames"
			],
			[
				"Seq",
				"SequenceGenerator"
			],
			[
				"Orde",
				"OrderType"
			],
			[
				"_max",
				"_maxIndex"
			],
			[
				"_s",
				"_startIndex"
			],
			[
				"log",
				"logfile"
			],
			[
				"res",
				"result"
			],
			[
				"Ve",
				"Vec3f"
			],
			[
				"cv",
				"cv::Vec3f"
			],
			[
				"ima",
				"imageLeftName"
			],
			[
				"camer",
				"cameraParams"
			],
			[
				"ce",
				"centralCol"
			],
			[
				"cent",
				"centralRow"
			],
			[
				"str",
				"str	str"
			],
			[
				"getT",
				"getTestExamples"
			],
			[
				"ra",
				"randIndex"
			],
			[
				"si",
				"size	size"
			],
			[
				"genera",
				"generateSequences"
			],
			[
				"s",
				"size	size"
			],
			[
				"un",
				"underscorePos"
			],
			[
				"size",
				"size_t"
			],
			[
				"LO",
				"Logger::instance"
			],
			[
				"le",
				"leftRightNamesMap"
			],
			[
				"sub",
				"substr"
			],
			[
				"bum",
				"bumblebee_camera_params"
			],
			[
				"depth",
				"depthEstimator"
			],
			[
				"_de",
				"_depthMap"
			],
			[
				"getDe",
				"getDepthFromDisparity"
			],
			[
				"CV_",
				"CV_32F"
			],
			[
				"_",
				"_depthMap"
			],
			[
				"su",
				"substr"
			],
			[
				"find",
				"find_last_of"
			],
			[
				"val",
				"validExtensions"
			],
			[
				"st",
				"str	str"
			],
			[
				"img",
				"imgDisparity16S"
			],
			[
				"comm",
				"comm-block	Comment - Block style comment"
			],
			[
				"CV",
				"CV_LOAD_IMAGE_GRAYSCALE"
			],
			[
				"set",
				"setExistingDepthImageNames"
			],
			[
				"dep",
				"depthEstimator"
			],
			[
				"De",
				"DepthEstimator"
			],
			[
				"dire",
				"directoryParser"
			],
			[
				"getde",
				"getDepthImageName"
			],
			[
				"col",
				"colorImageName"
			],
			[
				"de",
				"depth_estimator"
			],
			[
				"CAR",
				"CarDetector::LEAVE_OLD_MODEL"
			],
			[
				"O",
				"OVERWRITE_MODEL"
			],
			[
				"over",
				"overwriteModel"
			],
			[
				"load",
				"loadModel"
			],
			[
				"model",
				"modelPath"
			],
			[
				"save",
				"saveModel"
			],
			[
				"testImage_c",
				"testImage_cpu_rgba"
			],
			[
				"tes",
				"testImage_cpu"
			],
			[
				"string",
				"std::string"
			],
			[
				"my",
				"my_image_name"
			],
			[
				"pai",
				"pairNameRect"
			],
			[
				"sv",
				"svm_binder"
			],
			[
				"car",
				"car_detector"
			],
			[
				"Fea",
				"FeatureDetector::SampleShape"
			],
			[
				"test",
				"testDirName"
			],
			[
				"pos",
				"positiveExsamples"
			],
			[
				"getdete",
				"getDetectedCarRects"
			],
			[
				"Log",
				"Logger::instance"
			],
			[
				"samp",
				"sampleShape"
			],
			[
				"fea",
				"feature_detector"
			],
			[
				"Ca",
				"CarSampleShape"
			],
			[
				"Car",
				"CarDetector"
			],
			[
				"win",
				"winSize"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 5392,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"command_palette":
	{
		"height": 194.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"vmen",
				"View: Toggle Menu"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: pair"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git",
				"Git: Show"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"gitstat",
				"Git: Status"
			]
		],
		"width": 633.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/find_positions_for_images.py",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/lasers_parser.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/lasers_parser.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/logger.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/logger.cpp",
		"/home/igor/.codeintel/codeintel.log",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/main.cpp",
		"/home/igor/.config/sublime-text-3/Packages/WhoCalled Function Finder/WhoCalled.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/WhoCalled Function Finder/README.md",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/gps_for_each_image_log_5.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/utils.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/Result/car_pos_log.dat",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/laser_points_5.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/car_detector.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_cpu.cpp",
		"/home/igor/logs/log_5_12_2013_____10_52_19/log_5_12_2013_____10_52_19-carmen.log",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/laser_points_9.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/Result/car_rects_log.dat",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/depth_estimator.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/bumblebee_camera_params.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/depth_estimator.cpp",
		"/home/igor/logs/log_9_12_2013_____11_25_46/result-gps.gm2dl",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/gps_point.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/sequence_generator.h",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/gps_for_each_image_log.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/sequence_generator.cpp",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/shift_to_zero.py",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/HOGclassifier.sublime-project",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/laser_points.txt",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/gps_images_for_gnuplot.txt",
		"/home/igor/logs/log_5_12_2013_____10_52_19/img_temp/timestamps.txt",
		"/home/igor/conky-manager/themes/LSD/config/LSD",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/log_images_gps_freiburg.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/car_detector.h",
		"/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebee-11123871.cal",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.h",
		"/home/igor/newFreiburgDataLog.alog",
		"/home/igor/Work/Thesis/MiscCode/PythonScripts/create_log.py",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_cpu.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_gpu.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_gpu.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/CMakeLists.txt",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-02/feedback-tutor.txt",
		"/home/igor/.config/sublime-text-3/Packages/User/make.sublime-build",
		"/home/igor/Downloads/KML_Samples.kml",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/Result/log.dat",
		"/home/igor/Work/Thesis/MiscCode/DepthFromStereo/SBM_Sample.cpp",
		"/home/igor/test.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/output_log.dat",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/src/InvertedIndexTest.java",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/src/InvertedIndex.java",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/InvertedIndexTest.Records.tsv",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/feedback-tutor.txt",
		"/home/igor/ExternalLibs/opencv-2.4.6.1/modules/gpu/src/cuda/hog.cu",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DataResolver.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DataSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DictionaryIndex.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IDataSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IDictionaryIndex.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IIndexSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IndexSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/ITokenReader.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/ReaderFormat.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/TokenReader.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/reader/Readers.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/reader/BaseParser.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/AArticleListModel.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticleList.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticleListMenu.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticlesListModel.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/IArticleListMenuSupport.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/MutableArticleListModel.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipCell.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipComponent.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipListener.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipManager.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipPopup.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/ListDataTipCell.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/ListDataTipListener.java",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/pos/degree_0/.model",
		"/home/igor/Downloads/people.tsv",
		"/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebeeRectify.cpp",
		"/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebeeRectify.h",
		"/tmp/bash-fc-1382437184",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/train_and_predict.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/temp_result_writer_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/car_detection_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/google.sh",
		"/home/igor/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/igor/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.h",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/main.cpp",
		"/home/igor/.config/sublime-text-3/Packages/User/pair.sublime-snippet",
		"/home/igor/.config/sublime-text-3/Packages/User/cstr.sublime-snippet",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/getimages.sh",
		"/home/igor/log_24_5_2012_____11_11_47.alog",
		"/home/igor/.gitconfig",
		"/home/igor/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/User/C++.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/etc/apt/sources.list",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/traverse/app/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/dhistogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/tvmio.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/histogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/blitzio.h",
		"/home/igor/ExternalLibs/blitz-0.9_CorrectedbyOPForICCBUG-ClangWarn/Makefile",
		"/home/igor/ExternalLibs/blitz-0.10/INSTALL",
		"/home/igor/Work/Thesis/MiscCode/learcode/buildtest.sh",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/normals.sublime-project",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/build/cmake_install.cmake",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/svmlight/svm_learn.h",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/delete.sh",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/test.sh",
		"/home/igor/Work/Thesis/MiscCode/imageclipper/src/Makefile",
		"/home/igor/Work/Thesis/OSMViewer/map_test.osm",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/Readme.md"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"angle",
			"90",
			"_file",
			"LogFile",
			"logfile",
			"LogFile",
			"logfile",
			"folder",
			"OKGREEN",
			"timeOfData",
			"/home/igor/logs/log_15_1_2014_____16_20_41",
			"log_5_12_2013_____10_52_19",
			"rawLaserList",
			"rows",
			"parseImageName",
			"log_11_12_2013_____14_12_34",
			"log_9_12_2013_____11_25_46",
			"fovStart",
			"float",
			"X",
			"float",
			"std::string",
			"s",
			"log_6_12_2013_____11_25_14",
			"log_5_12_2013_____10_52_19",
			"log_11_12_2013_____14_12_34",
			"yList",
			"xList",
			"log_11_12_2013_____11_25_46",
			"log_9_12_2013_____11_25_46",
			"log_5_12_2013_____10_52_19",
			"x",
			"log_9_12_2013_____11_25_46",
			"log_6_12_2013_____11_25_14",
			"log_5_12_2013_____10_52_19",
			"size",
			"2",
			"testDirName",
			"logfile",
			"// ",
			"Foobar",
			"max",
			"startIndex",
			"_startIndex",
			"pixels",
			"CV_32F",
			"getDepthMedian",
			"scores",
			"imageLeftName",
			"name",
			"image",
			"imgDisparity16S",
			"imgLeft",
			"number",
			"imageName",
			"Found",
			"feature_detector",
			"h",
			"feature_detector",
			"FeatureDetector",
			"_hogTestCpu",
			"FEATURE_DETECTOR_H",
			"detectMultiScaleCpu",
			"detectMultiScaleGpu",
			"setTestHogFromHyperplane",
			"str",
			"unordered_map",
			"std::multimap",
			"squarePosDirs",
			"degree_0",
			"sampleShape",
			"Train",
			"Camera",
			"Image",
			"[i]",
			"temp_result_writer",
			"SVR_Q",
			"svm_predict_values",
			"this->getModel()",
			"singleDetectorVector",
			"TODO",
			"i",
			"Kernel",
			"SVR_Q",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"kernel_function",
			"Solve",
			"svm_node",
			"dot",
			"kernel_function",
			"SVR_Q",
			"Solve",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"Point",
			"_trainHog",
			"Rect",
			"_hog",
			"imageFilename",
			"Mat",
			"Size",
			"TRA",
			"pos_left",
			"HistType",
			"histogram_",
			"images",
			"detectTest",
			"imread",
			"showDetections",
			"hog",
			"patches",
			"Patch",
			"storeCursor",
			"traversability_pwn",
			"svm_learn_regression",
			"train",
			"optimi",
			"optimiz",
			"trainingPadding",
			"way"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"std::multimap",
			"cv::Size",
			"hogs",
			"vector<float> ",
			"hog_classifier"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.cpp",
					"settings":
					{
						"buffer_size": 5392,
						"regions":
						{
						},
						"selection":
						[
							[
								2723,
								2723
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 249.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 112.0
	},
	"output.git-push":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/MyProjects/InformationRetrieval/ib31/exercise-sheet-02/src/ex2.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 233.0,
	"status_bar_visible": true
}
