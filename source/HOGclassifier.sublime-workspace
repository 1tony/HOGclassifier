{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Seq",
				"SequenceGenerator"
			],
			[
				"Orde",
				"OrderType"
			],
			[
				"_max",
				"_maxIndex"
			],
			[
				"_s",
				"_startIndex"
			],
			[
				"log",
				"logfile"
			],
			[
				"y",
				"y"
			],
			[
				"res",
				"result"
			],
			[
				"Ve",
				"Vec3f"
			],
			[
				"cv",
				"cv::Vec3f"
			],
			[
				"ima",
				"imageLeftName"
			],
			[
				"camer",
				"cameraParams"
			],
			[
				"tem",
				"tempDoubleDisparity"
			],
			[
				"ce",
				"centralCol"
			],
			[
				"cent",
				"centralRow"
			],
			[
				"str",
				"str	str"
			],
			[
				"seq",
				"sequence_generator"
			],
			[
				"getT",
				"getTestExamples"
			],
			[
				"ra",
				"randIndex"
			],
			[
				"si",
				"size	size"
			],
			[
				"get",
				"getTestSeq"
			],
			[
				"genera",
				"generateSequences"
			],
			[
				"s",
				"size	size"
			],
			[
				"un",
				"underscorePos"
			],
			[
				"size",
				"size_t"
			],
			[
				"LO",
				"Logger::instance"
			],
			[
				"le",
				"leftRightNamesMap"
			],
			[
				"sub",
				"substr"
			],
			[
				"bum",
				"bumblebee_camera_params"
			],
			[
				"image",
				"imageLeftName"
			],
			[
				"depth",
				"depthEstimator"
			],
			[
				"_de",
				"_depthMap"
			],
			[
				"getDe",
				"getDepthFromDisparity"
			],
			[
				"CV_",
				"CV_32F"
			],
			[
				"_",
				"_depthMap"
			],
			[
				"las",
				"lastSlashLocation"
			],
			[
				"su",
				"substr"
			],
			[
				"find",
				"find_last_of"
			],
			[
				"file",
				"fileNamesRight"
			],
			[
				"fil",
				"fileNamesLeft"
			],
			[
				"val",
				"validExtensions"
			],
			[
				"st",
				"str	str"
			],
			[
				"img",
				"imgDisparity16S"
			],
			[
				"comm",
				"comm-block	Comment - Block style comment"
			],
			[
				"CV",
				"CV_LOAD_IMAGE_GRAYSCALE"
			],
			[
				"fou",
				"foundNumberBegin"
			],
			[
				"num",
				"numberString"
			],
			[
				"set",
				"setExistingDepthImageNames"
			],
			[
				"dep",
				"depthEstimator"
			],
			[
				"De",
				"DepthEstimator"
			],
			[
				"dire",
				"directoryParser"
			],
			[
				"getde",
				"getDepthImageName"
			],
			[
				"col",
				"colorImageName"
			],
			[
				"de",
				"depth_estimator"
			],
			[
				"CAR",
				"CarDetector::LEAVE_OLD_MODEL"
			],
			[
				"O",
				"OVERWRITE_MODEL"
			],
			[
				"over",
				"overwriteModel"
			],
			[
				"load",
				"loadModel"
			],
			[
				"model",
				"modelPath"
			],
			[
				"save",
				"saveModel"
			],
			[
				"testImage_c",
				"testImage_cpu_rgba"
			],
			[
				"tes",
				"testImage_cpu"
			],
			[
				"string",
				"std::string"
			],
			[
				"rec",
				"rectPosDirs"
			],
			[
				"my",
				"my_image_name"
			],
			[
				"pai",
				"pairNameRect"
			],
			[
				"sv",
				"svm_binder"
			],
			[
				"car",
				"car_detector"
			],
			[
				"Fea",
				"FeatureDetector::SampleShape"
			],
			[
				"test",
				"testDirName"
			],
			[
				"pos",
				"positiveExsamples"
			],
			[
				"getdete",
				"getDetectedCarRects"
			],
			[
				"Log",
				"Logger::instance"
			],
			[
				"samp",
				"sampleShape"
			],
			[
				"fea",
				"feature_detector"
			],
			[
				"Ca",
				"CarSampleShape"
			],
			[
				"Car",
				"CarDetector"
			],
			[
				"win",
				"winSize"
			],
			[
				"SID",
				"SIDE_RIGHT"
			],
			[
				"HO",
				"HOGDescriptor"
			],
			[
				"resul",
				"resultWriter"
			],
			[
				"temp",
				"temp_result_writer"
			],
			[
				"en",
				"endl"
			],
			[
				"bott",
				"bottomRightY"
			],
			[
				"top",
				"topLeftY"
			],
			[
				"add",
				"addEntry"
			],
			[
				"_ho",
				"_hogTest"
			],
			[
				"ADD",
				"ADD_LIBRARY"
			],
			[
				"c",
				"c_str"
			],
			[
				"des",
				"descriptorVector"
			],
			[
				"max",
				"maxElem"
			],
			[
				"F",
				"FeatureDetector"
			],
			[
				"svm",
				"svmBinder"
			],
			[
				"svmB",
				"SvmBinder"
			],
			[
				"ma",
				"main	main()"
			],
			[
				"feature",
				"featureVector"
			],
			[
				"FE",
				"FeatureEntity"
			],
			[
				"prob",
				"problemSize"
			],
			[
				"hog",
				"hogsPos"
			],
			[
				"Ho",
				"hogsNeg"
			],
			[
				"some",
				"something"
			],
			[
				"CROP",
				"CROP_DELIMETER"
			],
			[
				"FIL",
				"FILENAME"
			],
			[
				"RA",
				"RAND_H"
			],
			[
				"MA",
				"MAX_ALLOWED_WIDTH"
			],
			[
				"IM",
				"IMAGE"
			],
			[
				"Image",
				"IMAGE_SIZE"
			]
		]
	},
	"buffers":
	[
		{
			"file": "depth_estimator.cpp",
			"settings":
			{
				"buffer_size": 4919,
				"line_ending": "Unix"
			}
		},
		{
			"file": "car_detector.cpp",
			"settings":
			{
				"buffer_size": 2309,
				"line_ending": "Unix"
			}
		},
		{
			"file": "car_detector.h",
			"settings":
			{
				"buffer_size": 1631,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebee-11123871.cal",
			"settings":
			{
				"buffer_size": 29204,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 147 files for \"getDepthMedian\"\n\n~/Work/Thesis/MiscCode/HOGclassifier/bin/train_and_predict:\n    <binary>\n\n/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/depth_estimator.cpp:\n   25  }\n   26  \n   27: float DepthEstimator::getDepthMedian(\n   28    const cv::Rect &rect) const\n   29  {\n\n/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/depth_estimator.h:\n   15      const std::string &imageLeftName,\n   16      const std::string &imageRightName);\n   17:   float getDepthMedian(const cv::Rect &rect) const;\n   18    cv::Mat getDisparity(\n   19      const cv::Mat &imageLeft,\n\n/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.cpp:\n   32      {\n   33        cv::rectangle(image, rect.tl(), rect.br(), cv::Scalar(64, 255, 64), 3);\n   34:       depthEstimator.getDepthMedian(rect);\n   35        this->addEntry(imageLeftName, rect);\n   36      }\n\n7 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 905,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "depth_estimator.h",
			"settings":
			{
				"buffer_size": 1426,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 4455,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sequence_generator.cpp",
			"settings":
			{
				"buffer_size": 2458,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sequence_generator.h",
			"settings":
			{
				"buffer_size": 1392,
				"line_ending": "Unix"
			}
		},
		{
			"file": "svm_binder.cpp",
			"settings":
			{
				"buffer_size": 11305,
				"line_ending": "Unix"
			}
		},
		{
			"file": "svm_binder.h",
			"settings":
			{
				"buffer_size": 1884,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bumblebee_camera_params.h",
			"settings":
			{
				"buffer_size": 963,
				"line_ending": "Unix"
			}
		},
		{
			"file": "temp_result_writer.cpp",
			"settings":
			{
				"buffer_size": 3013,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/igor/newFreiburgDataLog.alog",
			"settings":
			{
				"buffer_size": 966156,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/igor/Work/Thesis/MiscCode/PythonScripts/create_log.py",
			"settings":
			{
				"buffer_size": 1208,
				"line_ending": "Unix"
			}
		},
		{
			"file": "directory_parser.h",
			"settings":
			{
				"buffer_size": 1245,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector.cpp",
			"settings":
			{
				"buffer_size": 2920,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector.h",
			"settings":
			{
				"buffer_size": 1754,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector_cpu.cpp",
			"settings":
			{
				"buffer_size": 1988,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector_cpu.h",
			"settings":
			{
				"buffer_size": 1373,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector_gpu.cpp",
			"settings":
			{
				"buffer_size": 1849,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector_gpu.h",
			"settings":
			{
				"buffer_size": 1411,
				"line_ending": "Unix"
			}
		},
		{
			"file": "logger.cpp",
			"settings":
			{
				"buffer_size": 2722,
				"line_ending": "Unix"
			}
		},
		{
			"file": "logger.h",
			"settings":
			{
				"buffer_size": 1871,
				"line_ending": "Unix"
			}
		},
		{
			"file": "directory_parser.cpp",
			"settings":
			{
				"buffer_size": 3301,
				"line_ending": "Unix"
			}
		},
		{
			"file": "temp_result_writer.h",
			"settings":
			{
				"buffer_size": 1377,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/igor/Work/Thesis/MiscCode/HOGclassifier/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1395,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2777,
				"line_ending": "Unix"
			}
		},
		{
			"file": "HOGclassifier.sublime-project",
			"settings":
			{
				"buffer_size": 117,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/make.sublime-build",
	"command_palette":
	{
		"height": 79.0,
		"selected_items":
		[
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: pair"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git",
				"Git: Show"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"gitstat",
				"Git: Status"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 462.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-02/feedback-tutor.txt",
		"/home/igor/.config/sublime-text-3/Packages/User/make.sublime-build",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/sequence_generator.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/sequence_generator.h",
		"/home/igor/Downloads/KML_Samples.kml",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/Result/log.dat",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/DepthFromStereo/SBM_Sample.cpp",
		"/home/igor/test.txt",
		"/home/igor/newFreiburgDataLog.alog",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/output_log.dat",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/src/InvertedIndexTest.java",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/src/InvertedIndex.java",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/InvertedIndexTest.Records.tsv",
		"/home/igor/MyProjects/InformationRetrieval/ib31/exercise-sheet-01/feedback-tutor.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_cpu.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_cpu.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/main.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/car_detector.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/car_detector.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_gpu.cpp",
		"/home/igor/ExternalLibs/opencv-2.4.6.1/modules/gpu/src/cuda/hog.cu",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector_gpu.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/logger.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/logger.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/depth_estimator.h",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DataResolver.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DataSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/DictionaryIndex.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IDataSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IDictionaryIndex.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IIndexSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/IndexSource.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/ITokenReader.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/ReaderFormat.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/dictionaryindex/reader/TokenReader.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/reader/Readers.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/engine/reader/BaseParser.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/AArticleListModel.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticleList.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticleListMenu.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/ArticlesListModel.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/IArticleListMenuSupport.java",
		"/home/igor/MyProjects/StarDict/ja/lingo/application/util/articlelist/MutableArticleListModel.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipCell.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipComponent.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipListener.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipManager.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/DataTipPopup.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/ListDataTipCell.java",
		"/home/igor/MyProjects/StarDict/com/xduke/xswing/ListDataTipListener.java",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/pos/degree_0/.model",
		"/home/igor/Downloads/people.tsv",
		"/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebeeRectify.cpp",
		"/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebeeRectify.h",
		"/tmp/bash-fc-1382437184",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/train_and_predict.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/temp_result_writer_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/car_detection_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/google.sh",
		"/home/igor/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/igor/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.h",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/main.cpp",
		"/home/igor/.config/sublime-text-3/Packages/User/pair.sublime-snippet",
		"/home/igor/.config/sublime-text-3/Packages/User/cstr.sublime-snippet",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/getimages.sh",
		"/home/igor/log_24_5_2012_____11_11_47.alog",
		"/home/igor/.gitconfig",
		"/home/igor/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/User/C++.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/igor/.codeintel/codeintel.log",
		"/etc/apt/sources.list",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/traverse/app/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/dhistogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/tvmio.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/histogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/blitzio.h",
		"/home/igor/ExternalLibs/blitz-0.9_CorrectedbyOPForICCBUG-ClangWarn/Makefile",
		"/home/igor/ExternalLibs/blitz-0.10/INSTALL",
		"/home/igor/Work/Thesis/MiscCode/learcode/buildtest.sh",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/normals.sublime-project",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/build/cmake_install.cmake",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/svmlight/svm_learn.h",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/delete.sh",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/test.sh",
		"/home/igor/Work/Thesis/MiscCode/imageclipper/src/Makefile",
		"/home/igor/Work/Thesis/OSMViewer/map_test.osm",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/Readme.md",
		"/home/igor/ExternalLibs/boost_1_54_0/INSTALL",
		"/home/igor/.bashrc"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"// ",
			"Foobar",
			"max",
			"startIndex",
			"_startIndex",
			"pixels",
			"CV_32F",
			"getDepthMedian",
			"scores",
			"imageLeftName",
			"name",
			"image",
			"imgDisparity16S",
			"imgLeft",
			"number",
			"imageName",
			"Found",
			"feature_detector",
			"h",
			"feature_detector",
			"FeatureDetector",
			"_hogTestCpu",
			"FEATURE_DETECTOR_H",
			"detectMultiScaleCpu",
			"detectMultiScaleGpu",
			"setTestHogFromHyperplane",
			"str",
			"unordered_map",
			"std::multimap",
			"squarePosDirs",
			"degree_0",
			"sampleShape",
			"Train",
			"Camera",
			"Image",
			"[i]",
			"temp_result_writer",
			"SVR_Q",
			"svm_predict_values",
			"this->getModel()",
			"singleDetectorVector",
			"TODO",
			"i",
			"Kernel",
			"SVR_Q",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"kernel_function",
			"Solve",
			"svm_node",
			"dot",
			"kernel_function",
			"SVR_Q",
			"Solve",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"Point",
			"_trainHog",
			"Rect",
			"_hog",
			"imageFilename",
			"Mat",
			"Size",
			"TRA",
			"pos_left",
			"HistType",
			"histogram_",
			"images",
			"detectTest",
			"imread",
			"showDetections",
			"hog",
			"patches",
			"Patch",
			"storeCursor",
			"traversability_pwn",
			"svm_learn_regression",
			"train",
			"optimi",
			"optimiz",
			"trainingPadding",
			"way"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"std::multimap",
			"cv::Size",
			"hogs",
			"vector<float> ",
			"hog_classifier"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 10,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "depth_estimator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4919,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "car_detector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2309,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "car_detector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1631,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/igor/Work/Thesis/MiscCode/RectifyBumblebee/bumblebee-11123871.cal",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29204,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 905,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										236,
										250
									],
									[
										478,
										492
									],
									[
										794,
										808
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								799,
								799
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "depth_estimator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1426,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4455,
						"regions":
						{
						},
						"selection":
						[
							[
								794,
								794
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "sequence_generator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2458,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1296.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "sequence_generator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1392,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "svm_binder.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11305,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "svm_binder.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1884,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "bumblebee_camera_params.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 963,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "temp_result_writer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3013,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/igor/newFreiburgDataLog.alog",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 966156,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/home/igor/Work/Thesis/MiscCode/PythonScripts/create_log.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1208,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "directory_parser.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1245,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "feature_detector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2920,
						"regions":
						{
						},
						"selection":
						[
							[
								947,
								947
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "feature_detector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1754,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "feature_detector_cpu.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1988,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "feature_detector_cpu.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1373,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "feature_detector_gpu.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1849,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "feature_detector_gpu.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1411,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "logger.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2722,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "logger.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1871,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "directory_parser.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3301,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								975
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "temp_result_writer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1377,
						"regions":
						{
						},
						"selection":
						[
							[
								684,
								684
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/home/igor/Work/Thesis/MiscCode/HOGclassifier/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1395,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2777,
						"regions":
						{
						},
						"selection":
						[
							[
								1364,
								1364
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "HOGclassifier.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 117,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 249.0
	},
	"output.git-commit":
	{
		"height": 112.0
	},
	"output.git-push":
	{
		"height": 112.0
	},
	"project": "HOGclassifier.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/MyProjects/InformationRetrieval/ib31/exercise-sheet-02/src/ex2.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 233.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
