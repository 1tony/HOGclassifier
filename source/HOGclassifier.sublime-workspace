{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rec",
				"rectPosDirs"
			],
			[
				"my",
				"my_image_name"
			],
			[
				"pai",
				"pairNameRect"
			],
			[
				"fou",
				"foundRectsWithNames"
			],
			[
				"sv",
				"svm_binder"
			],
			[
				"car",
				"car_detector"
			],
			[
				"Fea",
				"FeatureDetector::SampleShape"
			],
			[
				"test",
				"testDirName"
			],
			[
				"pos",
				"positiveExsamples"
			],
			[
				"getdete",
				"getDetectedCarRects"
			],
			[
				"log",
				"logInfo"
			],
			[
				"Log",
				"Logger::instance"
			],
			[
				"samp",
				"sampleShape"
			],
			[
				"fea",
				"feature_detector"
			],
			[
				"Ca",
				"CarSampleShape"
			],
			[
				"str",
				"str	str"
			],
			[
				"Car",
				"CarDetector"
			],
			[
				"win",
				"winSize"
			],
			[
				"SID",
				"SIDE_RIGHT"
			],
			[
				"HO",
				"HOGDescriptor"
			],
			[
				"resul",
				"resultWriter"
			],
			[
				"temp",
				"temp_result_writer"
			],
			[
				"tem",
				"temp_result_writer"
			],
			[
				"en",
				"endl"
			],
			[
				"bott",
				"bottomRightY"
			],
			[
				"top",
				"topLeftY"
			],
			[
				"image",
				"imageName"
			],
			[
				"add",
				"addEntry"
			],
			[
				"file",
				"fileName"
			],
			[
				"val",
				"valueVectorSize"
			],
			[
				"_ho",
				"_hogTest"
			],
			[
				"ADD",
				"ADD_LIBRARY"
			],
			[
				"c",
				"c_str"
			],
			[
				"des",
				"descriptorVector"
			],
			[
				"max",
				"maxElem"
			],
			[
				"F",
				"FeatureDetector"
			],
			[
				"tes",
				"testExamples"
			],
			[
				"svm",
				"svmBinder"
			],
			[
				"svmB",
				"SvmBinder"
			],
			[
				"ma",
				"main	main()"
			],
			[
				"feature",
				"featureVector"
			],
			[
				"FE",
				"FeatureEntity"
			],
			[
				"prob",
				"problemSize"
			],
			[
				"hog",
				"hogsPos"
			],
			[
				"Ho",
				"hogsNeg"
			],
			[
				"_",
				"_validExtensions"
			],
			[
				"some",
				"something"
			],
			[
				"CROP",
				"CROP_DELIMETER"
			],
			[
				"FIL",
				"FILENAME"
			],
			[
				"RA",
				"RAND_H"
			],
			[
				"MA",
				"MAX_ALLOWED_WIDTH"
			],
			[
				"get",
				"getInstance"
			],
			[
				"IM",
				"IMAGE"
			],
			[
				"Image",
				"IMAGE_SIZE"
			]
		]
	},
	"buffers":
	[
		{
			"file": "car_detector.h",
			"settings":
			{
				"buffer_size": 760,
				"line_ending": "Unix"
			}
		},
		{
			"file": "car_detector.cpp",
			"settings":
			{
				"buffer_size": 1355,
				"line_ending": "Unix"
			}
		},
		{
			"file": "temp_result_writer.cpp",
			"settings":
			{
				"buffer_size": 1124,
				"line_ending": "Unix"
			}
		},
		{
			"file": "temp_result_writer.h",
			"settings":
			{
				"buffer_size": 536,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 2346,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector.cpp",
			"settings":
			{
				"buffer_size": 2649,
				"line_ending": "Unix"
			}
		},
		{
			"file": "feature_detector.h",
			"settings":
			{
				"buffer_size": 1137,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: pair"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Quick Add"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git",
				"Git: Show"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"gitstat",
				"Git: Status"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 462.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/train_and_predict.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/temp_result_writer_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/source/CMakeFiles/car_detection_lib.dir/CXX.includecache",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/google.sh",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/CMakeLists.txt",
		"/home/igor/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/igor/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/main.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/temp_result_writer.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm_binder.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/svm.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/car_detector.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/feature_detector.cpp",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.h",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/directory_parser.cpp",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/main.cpp",
		"/home/igor/.config/sublime-text-3/Packages/User/pair.sublime-snippet",
		"/home/igor/.config/sublime-text-3/Packages/User/cstr.sublime-snippet",
		"/home/igor/Work/Thesis/CarData/DataFromGoogleImages/getimages.sh",
		"/home/igor/log_24_5_2012_____11_11_47.alog",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/build/output_log.dat",
		"/home/igor/.gitconfig",
		"/home/igor/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/User/C++.sublime-settings",
		"/home/igor/.config/sublime-text-3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/home/igor/.codeintel/codeintel.log",
		"/etc/apt/sources.list",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/traverse/app/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/dhistogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/tvmio.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/cvision/histogram.h",
		"/home/igor/Work/Thesis/MiscCode/learcode/lear/blitz/blitzio.h",
		"/home/igor/ExternalLibs/blitz-0.9_CorrectedbyOPForICCBUG-ClangWarn/Makefile",
		"/home/igor/ExternalLibs/blitz-0.10/INSTALL",
		"/home/igor/Work/Thesis/MiscCode/learcode/buildtest.sh",
		"/home/igor/Work/Thesis/MiscCode/HOGclassifier/source/logger.h",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/normals.sublime-project",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/build/cmake_install.cmake",
		"/home/igor/Work/HiWi/bogoslai-normals-svm/CMakeLists.txt",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/svmlight/svm_learn.h",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/delete.sh",
		"/home/igor/Work/Thesis/CarData/TrainingData/neg/imageMagickTest1/test.sh",
		"/home/igor/Work/Thesis/MiscCode/imageclipper/src/Makefile",
		"/home/igor/Work/Thesis/OSMViewer/map_test.osm",
		"/home/igor/Work/Thesis/MiscCode/trainHOG/Readme.md",
		"/home/igor/ExternalLibs/boost_1_54_0/INSTALL",
		"/home/igor/.bashrc"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"unordered_map",
			"std::multimap",
			"squarePosDirs",
			"degree_0",
			"sampleShape",
			"Train",
			"Camera",
			"Image",
			"[i]",
			"temp_result_writer",
			"SVR_Q",
			"svm_predict_values",
			"this->getModel()",
			"singleDetectorVector",
			"TODO",
			"i",
			"Kernel",
			"SVR_Q",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"kernel_function",
			"Solve",
			"svm_node",
			"dot",
			"kernel_function",
			"SVR_Q",
			"Solve",
			"solve_epsilon_svr",
			"svm_train_one",
			"svm_train",
			"setProblemTrain",
			"Point",
			"_trainHog",
			"Rect",
			"_hog",
			"imageFilename",
			"Mat",
			"Size",
			"TRA",
			"pos_left",
			"HistType",
			"histogram_",
			"images",
			"detectTest",
			"imread",
			"showDetections",
			"hog",
			"patches",
			"Patch",
			"storeCursor",
			"traversability_pwn",
			"svm_learn_regression",
			"train",
			"optimi",
			"optimiz",
			"trainingPadding",
			"way"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"std::multimap",
			"cv::Size",
			"hogs",
			"vector<float> ",
			"hog_classifier"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "car_detector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 760,
						"regions":
						{
						},
						"selection":
						[
							[
								485,
								485
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "car_detector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1355,
						"regions":
						{
						},
						"selection":
						[
							[
								1096,
								1096
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "temp_result_writer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1124,
						"regions":
						{
						},
						"selection":
						[
							[
								253,
								253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "temp_result_writer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 536,
						"regions":
						{
						},
						"selection":
						[
							[
								328,
								328
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2346,
						"regions":
						{
						},
						"selection":
						[
							[
								2234,
								2234
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "feature_detector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2649,
						"regions":
						{
						},
						"selection":
						[
							[
								809,
								809
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "feature_detector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1137,
						"regions":
						{
						},
						"selection":
						[
							[
								1126,
								1126
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.git-commit":
	{
		"height": 112.0
	},
	"output.git-push":
	{
		"height": 112.0
	},
	"project": "HOGclassifier.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 233.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
